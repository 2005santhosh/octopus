<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OCTOPUS - Content Lab</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #0969da;
            --primary-hover: #0750a5;
            --danger-color: #dc3545;
            --danger-hover: #c82333;
            --success-bg: #d4edda;
            --success-text: #155724;
            --info-bg: #d1ecf1;
            --info-text: #0c5460;
            --warning-bg: #fff3cd;
            --warning-text: #856404;
            --neutral-bg: #e2e3e5;
            --neutral-text: #383d41;
            --highlight-bg: #e0f0ff;
        }
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        body {
            background-color: #f8f9fa;
            color: #333;
            overflow-x: hidden;
        }
        /* Dashboard Layout */
        .dashboard-container {
            display: flex;
            min-height: 100vh;
        }
        /* Sidebar */
        .sidebar {
            width: 250px;
            background-color: #ffffff;
            box-shadow: 2px 0 10px rgba(0, 0, 0, 0.05);
            padding: 20px 0;
            position: fixed;
            height: 100vh;
            overflow-y: auto;
            z-index: 1000;
        }
        .sidebar-logo {
            display: flex;
            align-items: center;
            padding: 0 20px 30px;
            border-bottom: 1px solid #eee;
        }
        .sidebar-logo i {
            font-size: 24px;
            color: var(--primary-color);
            margin-right: 10px;
        }
        .sidebar-logo h2 {
            font-size: 24px;
            color: var(--primary-color);
        }
        .sidebar-menu {
            padding: 20px 0;
        }
        .menu-item {
            display: flex;
            align-items: center;
            padding: 15px 20px;
            color: #333;
            text-decoration: none;
            transition: all 0.3s;
            border-left: 3px solid transparent;
        }
        .menu-item:hover, .menu-item.active {
            background-color: #f0f7ff;
            color: var(--primary-color);
            border-left-color: var(--primary-color);
        }
        .menu-item i {
            margin-right: 15px;
            font-size: 18px;
            width: 20px;
            text-align: center;
        }
        /* Main Content */
        .main-content {
            flex: 1;
            margin-left: 250px;
            display: flex;
            flex-direction: column;
            transition: margin-left 0.3s;
        }
        /* Top Bar */
        .top-bar {
            background-color: #ffffff;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            padding: 15px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: sticky;
            top: 0;
            z-index: 900;
        }
        .menu-toggle {
            display: none;
            background: none;
            border: none;
            font-size: 20px;
            color: #666;
            cursor: pointer;
        }
        .search-bar {
            flex: 1;
            max-width: 500px;
            position: relative;
        }
        .search-bar input {
            width: 100%;
            padding: 10px 15px 10px 40px;
            border: 1px solid #ddd;
            border-radius: 25px;
            font-size: 14px;
            transition: border-color 0.3s;
        }
        .search-bar input:focus {
            outline: none;
            border-color: var(--primary-color);
        }
        .search-bar i {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #999;
        }
        .top-bar-actions {
            display: flex;
            align-items: center;
        }
        .notification-btn {
            position: relative;
            background: none;
            border: none;
            font-size: 20px;
            color: #666;
            margin-right: 20px;
            cursor: pointer;
            transition: color 0.3s;
        }
        .notification-btn:hover {
            color: var(--primary-color);
        }
        .notification-badge {
            position: absolute;
            top: -5px;
            right: -5px;
            background-color: var(--primary-color);
            color: white;
            font-size: 10px;
            width: 18px;
            height: 18px;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .user-profile {
            display: flex;
            align-items: center;
            cursor: pointer;
        }
        .user-profile img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 10px;
        }
        .user-profile span {
            font-weight: 500;
        }
        /* Credits Display */
        .credits-display {
            background-color: var(--highlight-bg);
            border-radius: 20px;
            padding: 8px 15px;
            display: flex;
            align-items: center;
            margin-right: 20px;
        }
        .credits-icon {
            color: var(--primary-color);
            margin-right: 8px;
        }
        .credits-text {
            font-weight: 500;
            color: var(--primary-color);
        }
        .credits-reset {
            font-size: 12px;
            color: #666;
            margin-left: 5px;
        }
        /* Content Page */
        .content-page {
            padding: 30px;
            flex: 1;
        }
        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
        }
        .page-title {
            font-size: 28px;
            font-weight: 600;
        }
        .page-actions {
            display: flex;
            gap: 15px;
        }
        .filter-dropdown {
            position: relative;
        }
        .filter-btn {
            background-color: white;
            border: 1px solid #ddd;
            padding: 10px 15px;
            border-radius: 5px;
            cursor: pointer;
            display: flex;
            align-items: center;
            font-size: 14px;
            transition: all 0.3s;
        }
        .filter-btn:hover {
            border-color: var(--primary-color);
        }
        .filter-btn i {
            margin-right: 8px;
        }
        .filter-menu {
            position: absolute;
            top: 100%;
            right: 0;
            background-color: white;
            border: 1px solid #ddd;
            border-radius: 5px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            width: 200px;
            z-index: 100;
            display: none;
        }
        .filter-menu.active {
            display: block;
        }
        .filter-item {
            padding: 10px 15px;
            cursor: pointer;
            transition: background-color 0.3s;
            font-size: 14px;
        }
        .filter-item:hover, .filter-item.selected {
            background-color: var(--highlight-bg);
            color: var(--primary-color);
        }
        .create-content-btn {
            background-color: var(--primary-color);
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 600;
            display: flex;
            align-items: center;
            transition: all 0.3s;
        }
        .create-content-btn:hover {
            background-color: var(--primary-hover);
        }
        .create-content-btn i {
            margin-right: 8px;
        }
        /* Popular Content Banner */
        .popular-banner {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-hover) 100%);
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 30px;
            color: white;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        .popular-banner h2 {
            font-size: 22px;
            font-weight: 600;
        }
        .popular-banner p {
            font-size: 16px;
            opacity: 0.9;
            max-width: 60%;
        }
        .popular-banner-icon {
            font-size: 48px;
            opacity: 0.8;
        }
        /* Content Stats */
        .content-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        .stat-card {
            background-color: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            transition: all 0.3s;
        }
        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }
        .stat-card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }
        .stat-card-title {
            font-size: 16px;
            color: #666;
        }
        .stat-card-icon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            color: white;
        }
        .stat-card-icon.blue {
            background-color: var(--primary-color);
        }
        .stat-card-icon.green {
            background-color: #28a745;
        }
        .stat-card-icon.purple {
            background-color: #6f42c1;
        }
        .stat-card-icon.orange {
            background-color: #fd7e14;
        }
        .stat-card-value {
            font-size: 24px;
            font-weight: 600;
        }
        /* Content Table - FIXED STYLES */
        .content-table-container {
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            overflow-x: auto;
        }
        .content-table {
            width: 100%;
            border-collapse: collapse;
            min-width: 900px;
        }
        .content-table th, .content-table td {
            padding: 15px 20px;
            text-align: left;
            border-bottom: 1px solid #eee;
        }
        .content-table th {
            background-color: #f8f9fa;
            font-weight: 600;
            color: #555;
            text-transform: uppercase;
            font-size: 13px;
        }
        .content-table tr:last-child td {
            border-bottom: none;
        }
        .content-table tr:hover {
            background-color: #f9f9f9;
        }
        /* Specific cell styling for better presentation */
        .content-id {
            font-weight: bold;
            color: #999;
            font-size: 13px;
            width: 60px;
        }
        .content-title-cell {
            font-weight: 600;
            color: #333;
            font-size: 15px;
            min-width: 250px;
        }
        .content-type-cell {
            width: 120px;
        }
        .content-status-cell {
            width: 120px;
        }
        .content-date-cell {
            font-size: 14px;
            color: #666;
            width: 120px;
        }
        .content-platform-cell {
            font-size: 14px;
            color: #666;
            width: 150px;
        }
        .content-platform-cell i {
            margin-right: 8px;
            font-size: 16px;
            color: #999;
        }
        .table-actions-cell {
            width: 150px;
        }
        .table-action-btn {
            background: none;
            border: none;
            color: #666;
            cursor: pointer;
            font-size: 14px;
            padding: 5px;
            margin-right: 5px;
            border-radius: 4px;
            transition: all 0.3s;
        }
        .table-action-btn:hover {
            background-color: #f0f7ff;
            color: var(--primary-color);
        }
        .table-action-btn.delete:hover {
            background-color: #fcebeb;
            color: var(--danger-color);
        }

        /* Content type badges */
        .content-type-badge {
            display: inline-block;
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 12px;
            font-weight: 600;
        }
        .content-type-badge.blog { background-color: var(--success-bg); color: var(--success-text); }
        .content-type-badge.video { background-color: var(--info-bg); color: var(--info-text); }
        .content-type-badge.social { background-color: var(--warning-bg); color: var(--warning-text); }
        .content-type-badge.email { background-color: var(--neutral-bg); color: var(--neutral-text); }

        /* Status badges */
        .content-status-badge {
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 12px;
            font-weight: 500;
            text-transform: capitalize;
        }
        .content-status-badge.published {
            background-color: var(--success-bg);
            color: var(--success-text);
        }
        .content-status-badge.draft {
            background-color: var(--warning-bg);
            color: var(--warning-text);
        }
        .content-status-badge.scheduled {
            background-color: var(--info-bg);
            color: var(--info-text);
        }

        /* Content Creation Modal */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 2000;
            justify-content: center;
            align-items: center;
        }
        .modal.active {
            display: flex;
        }
        .modal-content {
            background-color: white;
            border-radius: 10px;
            width: 90%;
            max-width: 600px;
            max-height: 90vh;
            overflow-y: auto;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            position: relative;
            z-index: 2001;
        }
        .modal-header {
            padding: 20px;
            border-bottom: 1px solid #eee;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .modal-title {
            font-size: 20px;
            font-weight: 600;
        }
        .modal-close {
            background: none;
            border: none;
            font-size: 24px;
            color: #999;
            cursor: pointer;
            transition: color 0.3s;
        }
        .modal-close:hover {
            color: #333;
        }
        .modal-body {
            padding: 20px;
        }
        .form-group {
            margin-bottom: 20px;
        }
        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
        }
        .form-input, .form-select, .form-textarea {
            width: 100%;
            padding: 10px 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 14px;
            transition: border-color 0.3s;
        }
        .form-input:focus, .form-select:focus, .form-textarea:focus {
            outline: none;
            border-color: var(--primary-color);
        }
        .form-textarea {
            min-height: 100px;
            resize: vertical;
        }
        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }
        .content-type-selector {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 10px;
            margin-bottom: 20px;
        }
        .content-type-modal-option {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s;
        }
        .content-type-modal-option:hover {
            border-color: var(--primary-color);
        }
        .content-type-modal-option.selected {
            border-color: var(--primary-color);
            background-color: var(--highlight-bg);
        }
        .content-type-modal-option i {
            font-size: 24px;
            margin-bottom: 8px;
            color: var(--primary-color);
        }
        .content-type-modal-option span {
            display: block;
            font-weight: 500;
        }
        .ai-suggestion-box {
            background-color: var(--highlight-bg);
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
        }
        .ai-suggestion-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 10px;
        }
        .ai-suggestion-header i {
            color: var(--primary-color);
            margin-right: 10px;
        }
        .ai-suggestion-header span {
            font-weight: 600;
            color: var(--primary-color);
        }
        .ai-refresh-btn {
            background: none;
            border: none;
            color: var(--primary-color);
            cursor: pointer;
            font-size: 16px;
            padding: 5px;
            border-radius: 4px;
            transition: all 0.3s;
            display: flex;
            align-items: center;
        }
        .ai-refresh-btn:hover {
            background-color: var(--highlight-bg);
            transform: rotate(180deg);
        }
        .ai-refresh-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
            transform: none;
        }
        .ai-suggestion-text {
            font-size: 14px;
            color: #666;
        }
        .modal-footer {
            padding: 20px;
            border-top: 1px solid #eee;
            display: flex;
            justify-content: flex-end;
            gap: 10px;
        }
        .btn-cancel {
            background-color: #f8f9fa;
            color: #333;
            border: 1px solid #ddd;
            padding: 10px 20px;
            border-radius: 5px;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s;
        }
        .btn-cancel:hover {
            background-color: #e9ecef;
        }
        .btn-save {
            background-color: var(--primary-color);
            color: white;
            padding: 10px 20px;
            border-radius: 5px;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s;
            border: none;
        }
        .btn-save:hover {
            background-color: var(--primary-hover);
        }

        /* Generate Script Button */
        .generate-script-container {
            display: flex;
            margin-top: 10px;
        }
        .generate-script-btn {
            background-color: var(--primary-color);
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 5px;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s;
            display: flex;
            align-items: center;
        }
        .generate-script-btn:hover:not(:disabled) {
            background-color: var(--primary-hover);
        }
        .generate-script-btn:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }
        .generate-script-btn i {
            margin-right: 8px;
        }

        /* Aspect Ratio Selector */
        .aspect-ratio-selector {
            margin-top: 15px;
        }
        .aspect-ratio-options {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }
        .aspect-ratio-option {
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 8px 15px;
            cursor: pointer;
            transition: all 0.3s;
            font-size: 14px;
        }
        .aspect-ratio-option:hover {
            border-color: var(--primary-color);
        }
        .aspect-ratio-option.selected {
            border-color: var(--primary-color);
            background-color: var(--highlight-bg);
            color: var(--primary-color);
        }

        /* Video Duration Selector */
        .video-duration-selector {
            margin-top: 15px;
            display: none;
        }
        .video-duration-selector.active {
            display: block;
        }
        .video-duration-options {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }
        .video-duration-option {
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 8px 15px;
            cursor: pointer;
            transition: all 0.3s;
            font-size: 14px;
        }
        .video-duration-option:hover {
            border-color: var(--primary-color);
        }
        .video-duration-option.selected {
            border-color: var(--primary-color);
            background-color: var(--highlight-bg);
            color: var(--primary-color);
        }

        /* Success message styling */
        .success-message {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            background-color: #28a745;
            color: white;
            padding: 15px 30px;
            border-radius: 5px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            z-index: 9999;
        }

        /* Responsive Design */
        @media (max-width: 992px) {
            .content-table {
                min-width: 700px;
            }
        }
        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
                transition: transform 0.3s;
            }
            .sidebar.active {
                transform: translateX(0);
            }
            .main-content {
                margin-left: 0;
            }
            .menu-toggle {
                display: block;
                margin-right: 20px;
            }
            .content-stats {
                grid-template-columns: 1fr;
            }
            .content-page .page-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 15px;
            }
            .page-actions {
                width: 100%;
                justify-content: space-between;
            }
            .credits-display {
                display: none;
            }
            .popular-banner {
                flex-direction: column;
                text-align: center;
                gap: 15px;
            }
            .popular-banner p {
                max-width: 100%;
            }
            .content-table-container {
                overflow-x: auto;
            }
            .content-type-selector {
                grid-template-columns: repeat(2, 1fr);
            }
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <div class="sidebar">
            <div class="sidebar-logo">
                <i class="fas fa-robot"></i>
                <h2>OCTOPUS</h2>
            </div>
            <div class="sidebar-menu">
                <a href="/dashboard" class="menu-item">
                    <i class="fas fa-home"></i>
                    <span>Dashboard</span>
                </a>
                <a href="/content" class="menu-item active">
                    <i class="fas fa-file-alt"></i>
                    <span>Content</span>
                </a>
                <a href="/analytics" class="menu-item">
                    <i class="fas fa-chart-line"></i>
                    <span>Analytics</span>
                </a>
                <a href="/gallery" class="menu-item">
                    <i class="fas fa-images"></i>
                    <span>Gallery</span>
                </a>
                <a href="/calendar" class="menu-item">
                    <i class="fas fa-calendar-alt"></i>
                    <span>Calendar</span>
                </a>
                <a href="/social-accounts" class="menu-item">
                    <i class="fas fa-share-alt"></i>
                    <span>Social Accounts</span>
                </a>
                <a href="/credits" class="menu-item">
                    <i class="fas fa-coins"></i>
                    <span>Credits</span>
                </a>
                <a href="/pricing" class="menu-item">
                    <i class="fas fa-tag"></i>
                    <span>Pricing</span>
                </a>
                <a href="/settings" class="menu-item">
                    <i class="fas fa-cog"></i>
                    <span>Settings</span>
                </a>
            </div>
        </div>
        <div class="main-content">
            <div class="top-bar">
                <button class="menu-toggle" aria-label="Toggle sidebar">
                    <i class="fas fa-bars"></i>
                </button>
                <div class="search-bar">
                    <i class="fas fa-search"></i>
                    <input type="text" placeholder="Search content..." aria-label="Search content">
                </div>
                <div class="top-bar-actions">
                    <div class="credits-display">
                        <i class="fas fa-coins credits-icon"></i>
                        <span class="credits-text" id="currentCreditsDisplay">3/3 Credits</span>
                        <span class="credits-reset" id="creditsResetTime">Resets in 5h</span>
                    </div>
                    <button class="notification-btn" aria-label="Notifications">
                        <i class="fas fa-bell"></i>
                        <span class="notification-badge">3</span>
                    </button>
                    <div class="user-profile">
                        <img src="https://randomuser.me/api/portraits/women/44.jpg" alt="User profile image">
                        <span>Sarah Johnson</span>
                    </div>
                </div>
            </div>
            <div class="content-page">
                <div class="page-header">
                    <h1 class="page-title">Content Lab</h1>
                    <div class="page-actions">
                        <div class="filter-dropdown">
                            <button class="filter-btn" id="filterBtn" aria-expanded="false" aria-controls="filterMenu">
                                <i class="fas fa-filter"></i>
                                Filter
                            </button>
                            <div class="filter-menu" id="filterMenu">
                                <div class="filter-item selected" data-filter="all">All Content</div>
                                <div class="filter-item" data-filter="popular">Popular</div>
                                <div class="filter-item" data-filter="published">Published</div>
                                <div class="filter-item" data-filter="draft">Drafts</div>
                                <div class="filter-item" data-filter="scheduled">Scheduled</div>
                                <div class="filter-item" data-filter="blog">Blog Posts</div>
                                <div class="filter-item" data-filter="video">Videos</div>
                                <div class="filter-item" data-filter="social">Social Posts</div>
                                <div class="filter-item" data-filter="email">Emails</div>
                            </div>
                        </div>
                        <button class="create-content-btn" id="createContentBtn">
                            <i class="fas fa-plus"></i>
                            Create Content
                        </button>
                    </div>
                </div>
                <div class="popular-banner">
                    <div>
                        <h2>Most Popular Content</h2>
                        <p>Discover the top-performing content created by our community of creators</p>
                    </div>
                    <i class="fas fa-fire popular-banner-icon"></i>
                </div>
                <div class="content-stats">
                    <div class="stat-card">
                        <div class="stat-card-header">
                            <div class="stat-card-title">Total Content</div>
                            <div class="stat-card-icon blue">
                                <i class="fas fa-file-alt"></i>
                            </div>
                        </div>
                        <div class="stat-card-value" id="totalContentCount">0</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-card-header">
                            <div class="stat-card-title">Published</div>
                            <div class="stat-card-icon green">
                                <i class="fas fa-check-circle"></i>
                            </div>
                        </div>
                        <div class="stat-card-value" id="publishedContentCount">0</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-card-header">
                            <div class="stat-card-title">Drafts</div>
                            <div class="stat-card-icon purple">
                                <i class="fas fa-edit"></i>
                            </div>
                        </div>
                        <div class="stat-card-value" id="draftsContentCount">0</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-card-header">
                            <div class="stat-card-title">Scheduled</div>
                            <div class="stat-card-icon orange">
                                <i class="fas fa-clock"></i>
                            </div>
                        </div>
                        <div class="stat-card-value" id="scheduledContentCount">0</div>
                    </div>
                </div>
                <div class="content-table-container">
                    <table class="content-table" id="contentTable">
                        <thead>
                            <tr class="table-header">
                                <th class="table-cell">ID</th>
                                <th class="table-cell">Title</th>
                                <th class="table-cell">Type</th>
                                <th class="table-cell">Status</th>
                                <th class="table-cell">Date</th>
                                <th class="table-cell">Platform</th>
                                <th class="table-cell">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="contentTableBody">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="modal" id="createContentModal">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title">Create New Content</h2>
                    <button class="modal-close" id="closeModalBtn" aria-label="Close modal">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="content-type-selector">
                        <div class="content-type-modal-option selected" data-type="post" role="button" aria-label="Select Post">
                            <i class="fas fa-file-alt"></i>
                            <span>POST</span>
                        </div>
                        <div class="content-type-modal-option" data-type="video" role="button" aria-label="Select Video">
                            <i class="fas fa-video"></i>
                            <span>Video</span>
                        </div>
                    </div>
                    <div class="ai-suggestion-box" id="aiSuggestionBox">
                        <div class="ai-suggestion-header">
                            <div style="display: flex; align-items: center;">
                                <i class="fas fa-lightbulb"></i>
                                <span>AI Suggestion</span>
                                <div class="ai-loading" id="aiLoading" style="display: none; margin-left: 10px;">
                                    <i class="fas fa-spinner fa-spin"></i>
                                </div>
                            </div>
                            <button class="ai-refresh-btn" id="aiRefreshBtn" title="Refresh AI Suggestions">
                                <i class="fas fa-sync-alt"></i>
                            </button>
                        </div>
                        <div class="ai-suggestion-text" id="aiSuggestionText">
                            <!-- AI suggestions will appear here -->
                        </div>
                        <div class="ai-suggestions-list" id="aiSuggestionsList" style="display: none; margin-top: 10px;">
                            <!-- Dynamic suggestions will be loaded here -->
                        </div>
                    </div>
                    <form id="createContentForm">
                        <div class="form-group">
                            <label class="form-label" for="modalContentTitle">Content Title</label>
                            <input type="text" class="form-input" id="modalContentTitle" placeholder="Enter content title" required aria-required="true">
                        </div>
                        <div class="form-group">
                            <label class="form-label" for="modalContentDescription">Description</label>
                            <textarea class="form-textarea form-input" id="modalContentDescription" placeholder="Enter content description" required aria-required="true"></textarea>
                            <div class="generate-script-container">
                                <button type="button" class="generate-script-btn" id="generateScriptBtn" disabled>
                                    <i class="fas fa-magic"></i>
                                    Generate Script
                                </button>
                            </div>
                        </div>
                        
                        <!-- Aspect Ratio Selector -->
                        <div class="form-group aspect-ratio-selector">
                            <label class="form-label">Aspect Ratio</label>
                            <div class="aspect-ratio-options">
                                <div class="aspect-ratio-option selected" data-ratio="9:16">9:16 (Instagram Reels, TikTok)</div>
                                <div class="aspect-ratio-option" data-ratio="16:9">16:9 (YouTube, Facebook)</div>
                                <div class="aspect-ratio-option" data-ratio="1:1">1:1 (Instagram Posts)</div>
                            </div>
                        </div>
                        
                        <!-- Video Duration Selector (only for video content type) -->
                        <div class="form-group video-duration-selector" id="videoDurationSelector">
                            <label class="form-label">Video Duration</label>
                            <div class="video-duration-options" id="videoDurationOptions">
                                <!-- Options will be populated based on aspect ratio selection -->
                            </div>
                        </div>
                        
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label" for="scheduleDate">Schedule Date</label>
                                <input type="date" class="form-input" id="scheduleDate" required aria-required="true">
                            </div>
                            <div class="form-group">
                                <label class="form-label" for="scheduleTime">Schedule Time</label>
                                <input type="time" class="form-input" id="scheduleTime" required aria-required="true">
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="form-label" for="platform">Platform</label>
                            <select class="form-select form-input" id="platform" required aria-required="true">
                                <option value="">Select Platform</option>
                                <option value="facebook">Facebook</option>
                                <option value="twitter">Twitter</option>
                                <option value="instagram">Instagram</option>
                                <option value="linkedin">LinkedIn</option>
                                <option value="youtube">YouTube</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label class="form-label" for="creditsRequired">Credits Required</label>
                            <input type="number" class="form-input" id="creditsRequired" value="1" min="1" max="3" readonly aria-readonly="true">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" id="cancelModalBtn">Cancel</button>
                    <button class="btn btn-save" id="saveContentBtn">Save Content</button>
                </div>
            </div>
        </div>
        <button class="create-button" id="createButton">
            <i class="fas fa-plus"></i>
        </button>
    </div>
    <div class="success-message" style="display: none;"></div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // --- Global Variables/Elements ---
            const today = new Date();
            let currentCredits = 3; // Mock value for top bar
            const maxFreeCredits = 3;
            // Current time is Thursday, July 31, 2025 at 8:41:20 PM IST.
            const nextResetDate = new Date('2025-08-01T00:00:00'); // Consistent reset date, corrected to current year + 1 month.
            const currentCreditsDisplay = document.getElementById('currentCreditsDisplay');
            const creditsResetTime = document.getElementById('creditsResetTime');
            const createContentBtn = document.getElementById('createContentBtn');
            const createButton = document.getElementById('createButton'); // Floating + button
            const createContentModal = document.getElementById('createContentModal');
            const closeModalBtn = document.getElementById('closeModalBtn');
            const cancelModalBtn = document.getElementById('cancelModalBtn');
            const saveContentBtn = document.getElementById('saveContentBtn');
            const createContentForm = document.getElementById('createContentForm');
            const filterBtn = document.getElementById('filterBtn');
            const filterMenu = document.getElementById('filterMenu');
            const contentTableBody = document.getElementById('contentTableBody');
            const totalContentCount = document.getElementById('totalContentCount');
            const publishedContentCount = document.getElementById('publishedContentCount');
            const draftsContentCount = document.getElementById('draftsContentCount');
            const scheduledContentCount = document.getElementById('scheduledContentCount');
            const generateScriptBtn = document.getElementById('generateScriptBtn');
            const modalContentDescription = document.getElementById('modalContentDescription');
            const videoDurationSelector = document.getElementById('videoDurationSelector');
            const videoDurationOptions = document.getElementById('videoDurationOptions');
            const aiRefreshBtn = document.getElementById('aiRefreshBtn');
            
        // --- Fetch AI Suggestions ---
        async function fetchAISuggestions(isRefresh = false) {
            const aiLoading = document.getElementById('aiLoading');
            const aiSuggestionText = document.getElementById('aiSuggestionText');
            const aiSuggestionsList = document.getElementById('aiSuggestionsList');
            
            // Disable refresh button during loading
            aiRefreshBtn.disabled = true;
            aiLoading.style.display = 'inline';
            aiSuggestionsList.style.display = 'none';
            
            if (isRefresh) {
                aiSuggestionText.textContent = '';
            } else {
                aiSuggestionText.textContent = '';
            }

            try {
                const response = await fetch('/api/trending-suggestions?count=3', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                const data = await response.json();

                if (data.success) {
                    aiLoading.style.display = 'none';
                    aiSuggestionsList.style.display = 'block';
                    aiSuggestionsList.innerHTML = '';
                    
                    data.suggestions.forEach(suggestion => {
                        const suggestionDiv = document.createElement('div');
                        suggestionDiv.innerHTML = `<strong>${suggestion.title}</strong>: ${suggestion.description}`;
                        aiSuggestionsList.appendChild(suggestionDiv);
                    });
                    
                    if (isRefresh) {
                        showSuccessMessage('AI suggestions refreshed successfully!');
                    }
                } else {
                    aiLoading.style.display = 'none';
                    aiSuggestionText.textContent = 'Failed to load suggestions. Please try again.';
                }

            } catch (error) {
                aiLoading.style.display = 'none';
                aiSuggestionText.textContent = 'Error loading suggestions.';
            } finally {
                // Re-enable refresh button
                aiRefreshBtn.disabled = false;
            }
        }

        // Fetch suggestions when the modal opens
        createContentBtn.addEventListener('click', () => fetchAISuggestions(false));
        createButton.addEventListener('click', () => fetchAISuggestions(false));
        
        // Add refresh button functionality
        aiRefreshBtn.addEventListener('click', () => fetchAISuggestions(true));

        // --- Sample Content Data ---
            let allContent = [
                {
                    id: 1,
                    type: 'post',
                    title: 'The Future of AI in Content Creation',
                    excerpt: 'Explore how artificial intelligence is revolutionizing content generation, from drafting blog posts to optimizing video scripts. Understand the tools and techniques shaping the industry...',
                    date: '2025-07-20',
                    status: 'published',
                    platform: 'website',
                    platformName: 'Website',
                },
                {
                    id: 2,
                    type: 'video',
                    title: 'AI Tools for Social Media Marketing in 2024',
                    excerpt: 'A comprehensive video guide to the best AI tools that can boost your social media presence, automate posting, analyze engagement, and generate compelling captions...',
                    date: '2025-07-25',
                    status: 'published',
                    platform: 'youtube',
                    platformName: 'YouTube',
                },
                {
                    id: 3,
                    type: 'social',
                    title: 'Quick Tip: Boost Engagement with Interactive Polls!',
                    excerpt: 'Learn how to use interactive polls on Facebook and Instagram to drive higher engagement and gather valuable audience insights. Simple steps for viral content...',
                    date: '2025-07-28',
                    status: 'scheduled',
                    platform: 'facebook',
                    platformName: 'Facebook',
                },
                {
                    id: 4,
                    type: 'email',
                    title: 'Your Weekly Content Digest - July 29th',
                    excerpt: 'Catch up on the latest trends in AI content, upcoming webinars, and exclusive tips for optimizing your marketing strategy. Don\'t miss out on valuable insights...',
                    date: '2025-07-29',
                    status: 'draft',
                    platform: 'email',
                    platformName: 'Email',
                },
                {
                    id: 5,
                    type: 'post',
                    title: 'Understanding SEO for AI-Generated Content',
                    excerpt: 'Can AI-generated content rank well on Google? This article dives into SEO best practices for AI-assisted writing, keyword research, and content structure...',
                    date: '2025-07-15',
                    status: 'published',
                    platform: 'website',
                    platformName: 'Website',
                },
                {
                    id: 6,
                    type: 'social',
                    title: 'New Feature Alert: AI Image Generation Now Live!',
                    excerpt: 'Exciting news! Our new AI image generation feature is now available. Create stunning visuals for your social posts in seconds. Try it out today! #AI #ContentCreation',
                    date: '2025-07-30',
                    status: 'published',
                    platform: 'twitter',
                    platformName: 'Twitter',
                },
            ];
            let filteredContent = [...allContent]; // Initialize with all content
            let currentFilter = 'all'; // Default filter
            let selectedModalContentType = 'post';
            let selectedAspectRatio = '9:16';
            let selectedVideoDuration = '15s';
            
            // --- Initial Render ---
            renderContentTable();
            updateContentStats();
            updateCreditsDisplay(); // For top bar
            updateVideoDurationOptions(); // Initialize video duration options
            
            // --- Event Listeners ---
            createContentBtn.addEventListener('click', openCreateModal);
            createButton.addEventListener('click', openCreateModal);
            closeModalBtn.addEventListener('click', closeCreateModal);
            cancelModalBtn.addEventListener('click', closeCreateModal);
            saveContentBtn.addEventListener('click', saveNewContent);
            
            // Filter button & menu
            filterBtn.addEventListener('click', (e) => {
                e.stopPropagation(); // Prevent document click from closing it immediately
                filterMenu.classList.toggle('active');
                filterBtn.setAttribute('aria-expanded', filterMenu.classList.contains('active'));
            });
            filterMenu.querySelectorAll('.filter-item').forEach(item => {
                item.addEventListener('click', function() {
                    filterMenu.classList.remove('active');
                    filterBtn.setAttribute('aria-expanded', false);
                    // Update selected visual state
                    filterMenu.querySelectorAll('.filter-item').forEach(li => li.classList.remove('selected'));
                    this.classList.add('selected');
                    currentFilter = this.dataset.filter;
                    applyFilterAndRender();
                });
            });
            
            // Close filter menu when clicking outside
            document.addEventListener('click', (e) => {
                if (!filterBtn.contains(e.target) && !filterMenu.contains(e.target)) {
                    filterMenu.classList.remove('active');
                    filterBtn.setAttribute('aria-expanded', false);
                }
            });
            
            // Sidebar toggle
            document.querySelector('.menu-toggle').addEventListener('click', function() {
                document.querySelector('.sidebar').classList.toggle('active');
            });
            
            // Modal content type selector logic
            document.querySelectorAll('.content-type-modal-option').forEach(type => {
                type.addEventListener('click', function() {
                    document.querySelectorAll('.content-type-modal-option').forEach(t => t.classList.remove('selected'));
                    this.classList.add('selected');
                    selectedModalContentType = this.getAttribute('data-type');
                    const credits = selectedModalContentType === 'video' ? 2 : 1;
                    document.getElementById('creditsRequired').value = credits;
                    
                    // Show/hide video duration selector based on content type
                    if (selectedModalContentType === 'video') {
                        videoDurationSelector.classList.add('active');
                    } else {
                        videoDurationSelector.classList.remove('active');
                    }
                });
            });
            
            // Aspect ratio selector logic
            document.querySelectorAll('.aspect-ratio-option').forEach(option => {
                option.addEventListener('click', function() {
                    document.querySelectorAll('.aspect-ratio-option').forEach(o => o.classList.remove('selected'));
                    this.classList.add('selected');
                    selectedAspectRatio = this.getAttribute('data-ratio');
                    updateVideoDurationOptions();
                });
            });
            
            // Video duration selector logic
            videoDurationOptions.addEventListener('click', function(e) {
                if (e.target.classList.contains('video-duration-option')) {
                    document.querySelectorAll('.video-duration-option').forEach(o => o.classList.remove('selected'));
                    e.target.classList.add('selected');
                    selectedVideoDuration = e.target.textContent;
                }
            });
            
            // Generate script button logic
            modalContentDescription.addEventListener('input', function() {
                if (this.value.trim() !== '') {
                    generateScriptBtn.disabled = false;
                } else {
                    generateScriptBtn.disabled = true;
                }
            });
            
            generateScriptBtn.addEventListener('click', function() {
                // Mock AI script generation
                const description = modalContentDescription.value;
                const generatedScript = `Based on your description "${description}", here's a generated script:\n\nIntroduction: Grab your audience's attention with a compelling hook.\n\nMain Content: Expand on your key points, providing valuable insights and examples.\n\nConclusion: Summarize your main points and include a call to action.`;
                
                modalContentDescription.value = generatedScript;
                showSuccessMessage('Script generated successfully!');
            });
            
            // --- Functions ---
            // Renders content in a tabular form
            function renderContentTable() {
                contentTableBody.innerHTML = '';
                
                if (filteredContent.length === 0) {
                    const noContentRow = document.createElement('tr');
                    noContentRow.innerHTML = `
                        <td colspan="7" style="text-align: center; padding: 20px;">No content found for the current filter.</td>
                    `;
                    contentTableBody.appendChild(noContentRow);
                    return;
                }
                
                filteredContent.forEach(content => {
                    const row = document.createElement('tr');
                    const platformIconClass = getPlatformIcon(content.platform);
                    const platformNameDisplay = content.platformName || content.platform.charAt(0).toUpperCase() + content.platform.slice(1);
                    row.innerHTML = `
                        <td class="content-id">${content.id}</td>
                        <td class="content-title-cell">${content.title}</td>
                        <td class="content-type-cell">
                            <span class="content-type-badge ${content.type}">${content.type}</span>
                        </td>
                        <td class="content-status-cell">
                            <span class="content-status-badge ${content.status}">${content.status}</span>
                        </td>
                        <td class="content-date-cell">${formatDateForDisplay(content.date)}</td>
                        <td class="content-platform-cell">
                            <i class="fab ${platformIconClass}"></i> ${platformNameDisplay}
                        </td>
                        <td class="table-actions-cell">
                            <button class="table-action-btn edit-content" data-id="${content.id}" title="Edit Content">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="table-action-btn share-content" data-id="${content.id}" title="Share Content">
                                <i class="fas fa-share-alt"></i>
                            </button>
                            <button class="table-action-btn delete-content" data-id="${content.id}" title="Delete Content">
                                <i class="fas fa-trash"></i>
                            </button>
                        </td>
                    `;
                    contentTableBody.appendChild(row);
                });
                
                // Add event listeners for dynamic buttons
                addContentActionListeners();
            }
            
            // Attaches event listeners to action buttons on content table rows
            function addContentActionListeners() {
                // Use event delegation on the parent table for efficiency
                contentTableBody.addEventListener('click', function(event) {
                    const targetButton = event.target.closest('.table-action-btn');
                    if (!targetButton) return; // Not a button click
                    const id = parseInt(targetButton.dataset.id);
                    if (targetButton.classList.contains('edit-content')) {
                        editContent(id);
                    } else if (targetButton.classList.contains('share-content')) {
                        alert(`Sharing content ID: ${id} (mock action)`);
                    } else if (targetButton.classList.contains('delete-content')) {
                        deleteContent(id);
                    }
                });
            }
            
            // Updates video duration options based on aspect ratio
            function updateVideoDurationOptions() {
                videoDurationOptions.innerHTML = '';
                
                if (selectedAspectRatio === '9:16') {
                    const durations = ['10s', '15s', '20s', '25s', '30s', '35s', '40s', '45s', '50s', '55s', '60s'];
                    durations.forEach(duration => {
                        const option = document.createElement('div');
                        option.className = 'video-duration-option';
                        if (duration === selectedVideoDuration) {
                            option.classList.add('selected');
                        }
                        option.textContent = duration;
                        videoDurationOptions.appendChild(option);
                    });
                } else if (selectedAspectRatio === '16:9') {
                    const durations = ['1min', '1.30min', '2min', '2.30min', '3min', '3.30min', '4min'];
                    durations.forEach(duration => {
                        const option = document.createElement('div');
                        option.className = 'video-duration-option';
                        if (duration === selectedVideoDuration) {
                            option.classList.add('selected');
                        }
                        option.textContent = duration;
                        videoDurationOptions.appendChild(option);
                    });
                } else if (selectedAspectRatio === '1:1') {
                    const durations = ['10s', '15s', '20s', '30s', '45s', '60s'];
                    durations.forEach(duration => {
                        const option = document.createElement('div');
                        option.className = 'video-duration-option';
                        if (duration === selectedVideoDuration) {
                            option.classList.add('selected');
                        }
                        option.textContent = duration;
                        videoDurationOptions.appendChild(option);
                    });
                }
            }
            
            // Opens the content creation/edit modal
            function openCreateModal() {
                // Set default date to today
                document.getElementById('scheduleDate').value = formatDateForInput(today);
                // Set default time to current time
                const now = new Date();
                const currentTime = now.toTimeString().slice(0, 5); // "HH:MM"
                document.getElementById('scheduleTime').value = currentTime;
                createContentModal.classList.add('active');
            }
            
            // Closes the content creation/edit modal
            function closeCreateModal() {
                createContentModal.classList.remove('active');
                createContentForm.reset();
                // Reset content type selector to default (e.g., Post)
                document.querySelectorAll('.content-type-modal-option').forEach(t => t.classList.remove('selected'));
                document.querySelector('.content-type-modal-option[data-type="post"]').classList.add('selected');
                selectedModalContentType = 'post';
                document.getElementById('creditsRequired').value = 1;
                
                // Reset aspect ratio and video duration
                document.querySelectorAll('.aspect-ratio-option').forEach(o => o.classList.remove('selected'));
                document.querySelector('.aspect-ratio-option[data-ratio="9:16"]').classList.add('selected');
                selectedAspectRatio = '9:16';
                updateVideoDurationOptions();
                
                // Hide video duration selector if not video type
                if (selectedModalContentType !== 'video') {
                    videoDurationSelector.classList.remove('active');
                }
                
                // Reset generate script button
                generateScriptBtn.disabled = true;
            }
            
            // Handles saving new content from the modal
            function saveNewContent() {
                if (!createContentForm.checkValidity()) {
                    createContentForm.reportValidity();
                    return;
                }
                const title = document.getElementById('modalContentTitle').value;
                const description = document.getElementById('modalContentDescription').value;
                const date = document.getElementById('scheduleDate').value;
                const time = document.getElementById('scheduleTime').value;
                const platform = document.getElementById('platform').value;
                const creditsRequired = parseInt(document.getElementById('creditsRequired').value);
                
                // Mock credit check
                if (currentCredits < creditsRequired) {
                    showSuccessMessage('Not enough credits to create this content!', 'danger');
                    return;
                }
                currentCredits -= creditsRequired; // Deduct credits
                
                const newId = allContent.length > 0 ? Math.max(...allContent.map(c => c.id)) + 1 : 1;
                const newContent = {
                    id: newId,
                    type: selectedModalContentType,
                    title: title,
                    excerpt: description.substring(0, 150) + (description.length > 150 ? '...' : ''), // Take first 150 chars as excerpt
                    date: date,
                    status: 'scheduled', // New content is scheduled by default
                    platform: platform,
                    platformName: platform.charAt(0).toUpperCase() + platform.slice(1),
                };
                allContent.push(newContent);
                applyFilterAndRender(); // Re-filter and render content
                updateContentStats();
                updateCreditsDisplay(); // Update credits in top bar
                showSuccessMessage('Content created and scheduled successfully!');
                closeCreateModal();
            }
            
            // Handles editing existing content
            function editContent(id) {
                const contentToEdit = allContent.find(c => c.id === id);
                if (contentToEdit) {
                    // Populate modal with existing content data
                    document.getElementById('modalContentTitle').value = contentToEdit.title;
                    document.getElementById('modalContentDescription').value = contentToEdit.excerpt; // Using excerpt for simplicity
                    document.getElementById('scheduleDate').value = contentToEdit.date;
                    // Time might need proper parsing if not stored as "HH:MM"
                    document.getElementById('scheduleTime').value = contentToEdit.time ? contentToEdit.time.slice(0,5) : '09:00'; // Assuming HH:MM or default
                    document.getElementById('platform').value = contentToEdit.platform;
                    
                    // Set content type in modal
                    document.querySelectorAll('.content-type-modal-option').forEach(t => {
                        t.classList.remove('selected');
                        if (t.dataset.type === contentToEdit.type) {
                            t.classList.add('selected');
                            selectedModalContentType = t.dataset.type;
                        }
                    });
                    
                    // Show/hide video duration selector based on content type
                    if (selectedModalContentType === 'video') {
                        videoDurationSelector.classList.add('active');
                    } else {
                        videoDurationSelector.classList.remove('active');
                    }
                    
                    document.getElementById('creditsRequired').value = selectedModalContentType === 'video' ? 2 : 1; // Recalculate credits
                    
                    // Open modal
                    createContentModal.classList.add('active');
                    
                    // Change save button behavior to update
                    saveContentBtn.onclick = function() {
                        if (!createContentForm.checkValidity()) {
                            createContentForm.reportValidity();
                            return;
                        }
                        // Update the content object
                        contentToEdit.title = document.getElementById('modalContentTitle').value;
                        contentToEdit.excerpt = document.getElementById('modalContentDescription').value.substring(0, 150) + (document.getElementById('modalContentDescription').value.length > 150 ? '...' : '');
                        contentToEdit.date = document.getElementById('scheduleDate').value;
                        contentToEdit.time = document.getElementById('scheduleTime').value; // Retaining time even if not explicitly shown on card
                        contentToEdit.platform = document.getElementById('platform').value;
                        contentToEdit.platformName = contentToEdit.platform.charAt(0).toUpperCase() + contentToEdit.platform.slice(1);
                        contentToEdit.type = selectedModalContentType; // Update content type if changed in modal
                        applyFilterAndRender();
                        showSuccessMessage('Content updated successfully!');
                        closeCreateModal();
                        saveContentBtn.onclick = saveNewContent; // Reset save button to add new content
                    };
                }
            }
            
            // Handles deleting content
            function deleteContent(id) {
                if (confirm('Are you sure you want to delete this content? This action cannot be undone.')) {
                    allContent = allContent.filter(content => content.id !== id);
                    applyFilterAndRender();
                    updateContentStats();
                    showSuccessMessage('Content deleted successfully!');
                }
            }
            
            // Applies the current filter to content and re-renders
            function applyFilterAndRender() {
                switch (currentFilter) {
                    case 'all':
                        filteredContent = [...allContent];
                        break;
                    case 'popular':
                        filteredContent = allContent.filter(content => content.popular);
                        break;
                    case 'published':
                        filteredContent = allContent.filter(content => content.status === 'published');
                        break;
                    case 'draft':
                        filteredContent = allContent.filter(content => content.status === 'draft');
                        break;
                    case 'scheduled':
                        filteredContent = allContent.filter(content => content.status === 'scheduled');
                        break;
                    case 'blog':
                        filteredContent = allContent.filter(content => content.type === 'post');
                        break;
                    case 'video':
                        filteredContent = allContent.filter(content => content.type === 'video');
                        break;
                    case 'social':
                        filteredContent = allContent.filter(content => content.type === 'social');
                        break;
                    case 'email':
                        filteredContent = allContent.filter(content => content.type === 'email');
                        break;
                    default:
                        filteredContent = [...allContent];
                }
                renderContentTable();
            }
            
            // Updates the content statistics cards
            function updateContentStats() {
                totalContentCount.textContent = allContent.length;
                publishedContentCount.textContent = allContent.filter(c => c.status === 'published').length;
                draftsContentCount.textContent = allContent.filter(c => c.status === 'draft').length;
                scheduledContentCount.textContent = allContent.filter(c => c.status === 'scheduled').length;
            }
            
            // Updates the credits display in the top bar
            function updateCreditsDisplay() {
                currentCreditsDisplay.textContent = `${currentCredits}/${maxFreeCredits} Credits`;
                const now = new Date();
                const timeLeft = nextResetDate.getTime() - now.getTime(); // Time in milliseconds
                const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
                const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
                let resetText = '';
                if (timeLeft < 0) {
                    resetText = 'Credits reset!';
                } else if (days > 0) {
                    resetText = `Resets in ${days}d ${hours}h`;
                } else if (hours > 0) {
                    resetText = `Resets in ${hours}h ${minutes}m`;
                } else if (minutes > 0) {
                    resetText = `Resets in ${minutes}m`;
                } else {
                    resetText = `Resets very soon!`;
                }
                creditsResetTime.textContent = resetText;
            }
            
            // Helper to get platform icon class
            function getPlatformIcon(platform) {
                switch (platform) {
                    case 'facebook': return 'fa-facebook-f';
                    case 'twitter': return 'fa-twitter';
                    case 'instagram': return 'fa-instagram';
                    case 'linkedin': return 'fa-linkedin-in';
                    case 'youtube': return 'fa-youtube';
                    case 'email': return 'fa-envelope';
                    case 'website': return 'fa-globe';
                    default: return 'fa-info-circle';
                }
            }
            
            // Helper to format date for display
            function formatDateForDisplay(dateString) {
                const date = new Date(dateString);
                const options = { month: 'short', day: 'numeric', year: 'numeric' };
                return date.toLocaleDateString('en-US', options);
            }
            
            // Helper to format date for input (YYYY-MM-DD)
            function formatDateForInput(date) {
                const year = date.getFullYear();
                const month = String(date.getMonth() + 1).padStart(2, '0');
                const day = String(date.getDate()).padStart(2, '0');
                return `${year}-${month}-${day}`;
            }
            
            // General success message function
            function showSuccessMessage(messageText, type = 'success') {
                const messageDiv = document.querySelector('.success-message');
                messageDiv.textContent = messageText;
                messageDiv.style.backgroundColor = type === 'success' ? '#28a745' : '#dc3545'; // Green for success, red for danger
                messageDiv.style.display = 'block';
                setTimeout(() => {
                    messageDiv.style.display = 'none';
                }, 3000);
            }
        });
    </script>
</body>
</html>