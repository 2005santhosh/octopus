<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OCTOPUS - Pricing</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #0969da;
            --primary-hover: #0750a5;
            --danger-color: #dc3545;
            --danger-hover: #c82333;
            --success-bg: #d4edda;
            --success-text: #155724;
            --info-bg: #d1ecf1;
            --info-text: #0c5460;
            --warning-bg: #fff3cd;
            --warning-text: #856404;
            --neutral-bg: #e2e3e5;
            --neutral-text: #383d41;
            --highlight-bg: #e0f0ff;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f8f9fa;
            color: #333;
            overflow-x: hidden;
        }

        /* Dashboard Layout */
        .dashboard-container {
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar */
        .sidebar {
            width: 250px;
            background-color: #ffffff;
            box-shadow: 2px 0 10px rgba(0, 0, 0, 0.05);
            padding: 20px 0;
            position: fixed;
            height: 100vh;
            overflow-y: auto;
            z-index: 1000;
            transition: transform 0.3s;
        }

        .sidebar-logo {
            display: flex;
            align-items: center;
            padding: 0 20px 30px;
            border-bottom: 1px solid #eee;
        }

        .sidebar-logo i {
            font-size: 24px;
            color: var(--primary-color);
            margin-right: 10px;
        }

        .sidebar-logo h2 {
            font-size: 24px;
            color: var(--primary-color);
        }

        .sidebar-menu {
            padding: 20px 0;
        }

        .menu-item {
            display: flex;
            align-items: center;
            padding: 15px 20px;
            color: #333;
            text-decoration: none;
            transition: all 0.3s;
            border-left: 3px solid transparent;
        }

        .menu-item:hover, .menu-item.active {
            background-color: #f0f7ff;
            color: var(--primary-color);
            border-left-color: var(--primary-color);
        }

        .menu-item i {
            margin-right: 15px;
            font-size: 18px;
            width: 20px;
            text-align: center;
        }

        /* Main Content */
        .main-content {
            flex: 1;
            margin-left: 250px;
            display: flex;
            flex-direction: column;
            transition: margin-left 0.3s;
        }

        /* Top Bar */
        .top-bar {
            background-color: #ffffff;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            padding: 15px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: sticky;
            top: 0;
            z-index: 900;
        }

        .menu-toggle {
            display: none;
            background: none;
            border: none;
            font-size: 20px;
            color: #666;
            cursor: pointer;
        }

        .search-bar {
            flex: 1;
            max-width: 500px;
            position: relative;
        }

        .search-bar input {
            width: 100%;
            padding: 10px 15px 10px 40px;
            border: 1px solid #ddd;
            border-radius: 25px;
            font-size: 14px;
            transition: border-color 0.3s;
        }

        .search-bar input:focus {
            outline: none;
            border-color: var(--primary-color);
        }

        .search-bar i {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #999;
        }

        .top-bar-actions {
            display: flex;
            align-items: center;
        }

        .notification-btn {
            position: relative;
            background: none;
            border: none;
            font-size: 20px;
            color: #666;
            margin-right: 20px;
            cursor: pointer;
            transition: color 0.3s;
        }

        .notification-btn:hover {
            color: var(--primary-color);
        }

        .notification-badge {
            position: absolute;
            top: -5px;
            right: -5px;
            background-color: var(--primary-color);
            color: white;
            font-size: 10px;
            width: 18px;
            height: 18px;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .user-profile {
            display: flex;
            align-items: center;
            cursor: pointer;
        }

        .user-profile img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 10px;
        }

        .user-profile span {
            font-weight: 500;
        }

        /* Credits Display (Top Bar - often re-used) */
        .credits-display {
            background-color: #f0f7ff;
            border-radius: 20px;
            padding: 8px 15px;
            display: flex;
            align-items: center;
            margin-right: 20px;
        }

        .credits-icon {
            color: var(--primary-color);
            margin-right: 8px;
        }

        .credits-text {
            font-weight: 500;
            color: var(--primary-color);
        }

        .credits-reset {
            font-size: 12px;
            color: #666;
            margin-left: 5px;
        }

        /* Page Content (General for all content pages) */
        .page-content {
            padding: 30px;
            flex: 1;
        }

        .page-header {
            display: flex;
            flex-direction: column; /* Stack title and description */
            align-items: center;
            text-align: center;
            margin-bottom: 40px; /* More space below header */
        }

        .page-header h1 {
            font-size: 32px; /* Larger title for pricing page */
            margin-bottom: 10px;
            color: var(--primary-color);
            font-weight: 700;
        }

        .page-header p {
            font-size: 18px;
            color: #555;
            max-width: 700px;
            line-height: 1.5;
        }

        /* General Button Styles (re-used across pages) */
        .btn {
            padding: 10px 20px;
            border-radius: 5px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s;
            border: none;
            font-size: 14px;
        }

        .btn-primary {
            background-color: var(--primary-color);
            color: white;
        }

        .btn-primary:hover {
            background-color: var(--primary-hover);
        }

        /* Pricing Page Specific Styles */
        .pricing-section {
            background-color: #ffffff;
            border-radius: 10px;
            padding: 25px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            max-width: 1200px; /* Max width for the pricing section */
            margin: 0 auto; /* Center the pricing section */
        }

        .pricing-toggle {
            display: flex;
            justify-content: center;
            margin-bottom: 30px;
            background-color: #f0f7ff;
            border-radius: 25px;
            padding: 5px;
            width: fit-content;
            margin-left: auto;
            margin-right: auto;
            border: 1px solid var(--primary-color);
        }

        .pricing-toggle button {
            background-color: transparent;
            border: none;
            padding: 10px 20px;
            border-radius: 20px;
            font-size: 15px;
            font-weight: 600;
            color: var(--primary-color);
            cursor: pointer;
            transition: all 0.3s;
        }

        .pricing-toggle button.active {
            background-color: var(--primary-color);
            color: white;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        }


        .pricing-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 25px;
        }

        .pricing-card {
            border: 1px solid #eee;
            border-radius: 10px;
            padding: 25px;
            text-align: center;
            transition: all 0.3s;
            display: flex;
            flex-direction: column;
            justify-content: space-between; /* Distribute content */
            min-height: 450px; /* Ensure cards have consistent height */
        }

        .pricing-card:hover {
            border-color: var(--primary-color);
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
        }

        .pricing-card.highlight {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(9, 105, 218, 0.2), 0 8px 20px rgba(0, 0, 0, 0.1);
            position: relative;
            z-index: 1; /* Bring highlighted card to front on hover */
            background-color: var(--highlight-bg); /* Subtle background for highlight */
        }

        .pricing-card h3 {
            font-size: 24px;
            font-weight: 700;
            margin-bottom: 15px;
            color: var(--primary-color);
        }

        .pricing-card .price {
            font-size: 48px; /* Larger price */
            font-weight: 700;
            color: #333;
            margin-bottom: 15px;
            line-height: 1; /* Adjust line height for price */
        }

        .pricing-card .price span {
            font-size: 18px; /* Larger duration text */
            color: #666;
            font-weight: 500;
            display: block; /* Make it block for new line */
            margin-top: 5px;
        }

        .pricing-card .price .currency {
            font-size: 24px; /* Currency symbol size */
            vertical-align: super; /* Position currency symbol */
        }

        .pricing-card ul {
            list-style: none;
            padding: 0;
            margin-bottom: 30px; /* More space below features */
            text-align: left;
            flex-grow: 1; /* Allow features list to grow */
        }

        .pricing-card ul li {
            font-size: 16px;
            color: #555;
            margin-bottom: 12px; /* More space between list items */
            display: flex;
            align-items: center;
        }

        .pricing-card ul li i {
            color: var(--success-text);
            margin-right: 10px;
            font-size: 18px;
        }

        .pricing-card .btn {
            margin-top: auto; /* Push button to bottom */
            padding: 12px 25px; /* Larger button padding */
            font-size: 16px;
        }

        /* Remove enterprise specific styles as it's no longer 'Custom' */
        /* .pricing-card.enterprise .price {
            font-size: 36px;
            color: #333;
        }
        .pricing-card.enterprise .price span {
            display: inline;
        } */


        /* Success message styling */
        .success-message {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            background-color: #28a745;
            color: white;
            padding: 15px 30px;
            border-radius: 5px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            z-index: 9999; /* Highest z-index for messages */
        }

        /* Responsive Design */
        @media (max-width: 992px) {
            .pricing-grid {
                grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            }
        }

        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
            }

            .sidebar.active {
                transform: translateX(0);
            }

            .main-content {
                margin-left: 0;
            }

            .menu-toggle {
                display: block;
                margin-right: 20px;
            }

            .page-header {
                align-items: flex-start;
                text-align: left;
                margin-bottom: 30px;
            }
            .page-header h1 {
                font-size: 28px;
            }
            .page-header p {
                font-size: 16px;
            }

            .credits-display {
                display: none;
            }
            .pricing-toggle {
                width: 100%;
                border-radius: 8px; /* Less rounded for full width */
                padding: 3px;
            }
            .pricing-toggle button {
                padding: 8px 15px;
                font-size: 14px;
            }
            .pricing-card {
                min-height: auto; /* Allow height to adjust on smaller screens */
            }
            .pricing-card .price {
                font-size: 38px;
            }
            .pricing-card .price span {
                font-size: 16px;
            }
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <div class="sidebar">
            <div class="sidebar-logo">
                <i class="fas fa-robot" aria-hidden="true"></i>
                <h2>OCTOPUS</h2>
            </div>
            <div class="sidebar-menu">
                <a href="./dashboard" class="menu-item">
                    <i class="fas fa-home" aria-hidden="true"></i>
                    <span>Dashboard</span>
                </a>
                <a href="./content" class="menu-item">
                    <i class="fas fa-file-alt" aria-hidden="true"></i>
                    <span>Content</span>
                </a>
                <a href="./analytics" class="menu-item">
                    <i class="fas fa-chart-line" aria-hidden="true"></i>
                    <span>Analytics</span>
                </a>
                <a href="./gallery" class="menu-item">
                    <i class="fas fa-images" aria-hidden="true"></i>
                    <span>Gallery</span>
                </a>
                <a href="./calendar" class="menu-item">
                    <i class="fas fa-calendar-alt" aria-hidden="true"></i>
                    <span>Calendar</span>
                </a>
                <a href="./social_accounts" class="menu-item">
                    <i class="fas fa-share-alt" aria-hidden="true"></i>
                    <span>Social Accounts</span>
                </a>
                <a href="./credits" class="menu-item">
                    <i class="fas fa-coins" aria-hidden="true"></i>
                    <span>Credits</span>
                </a>
                <a href="./pricing" class="menu-item active">
                    <i class="fas fa-tag" aria-hidden="true"></i>
                    <span>Pricing</span>
                </a>
                <a href="./settings" class="menu-item">
                    <i class="fas fa-cog" aria-hidden="true"></i>
                    <span>Settings</span>
                </a>
            </div>
        </div>
        <div class="main-content">
            <div class="top-bar">
                <button class="menu-toggle" aria-label="Toggle sidebar">
                    <i class="fas fa-bars"></i>
                </button>
                <div class="search-bar">
                    <i class="fas fa-search" aria-hidden="true"></i>
                    <input type="text" placeholder="Search pricing plans..." aria-label="Search">
                </div>
                <div class="top-bar-actions">
                    <div class="credits-display">
                        <i class="fas fa-coins credits-icon" aria-hidden="true"></i>
                        <span class="credits-text" id="currentCreditsDisplay">3/3 Credits</span>
                        <span class="credits-reset" id="creditsResetTime">Resets in 5h</span>
                    </div>
                    <button class="notification-btn" aria-label="Notifications">
                        <i class="fas fa-bell" aria-hidden="true"></i>
                        <span class="notification-badge">3</span>
                    </button>
                    <div class="user-profile">
                        <img src="https://randomuser.me/api/portraits/women/44.jpg" alt="User profile image">
                        <span>Sarah Johnson</span>
                    </div>
                </div>
            </div>
            <div class="page-content">
                <div class="page-header">
                    <h1>Choose Your Octopus Plan</h1>
                    <p>Unlock more AI content generation power with our flexible pricing plans. Whether you're a solo creator or a large organization, we have a plan that fits your needs.</p>
                </div>

                <div class="pricing-section">
                    <div class="pricing-toggle">
                        <button class="active" data-period="monthly">Monthly</button>
                        <button data-period="annually">Annually <span style="color: green; font-weight: bold;">(Save 20%)</span></button>
                    </div>

                    <div class="pricing-grid" id="pricingGrid">
                        </div>
                </div>
            </div>
        </div>
    </div>

    <div class="success-message" style="display: none;"></div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Mock Credit Data (for top bar display)
            let currentCredits = 3;
            const maxFreeCredits = 3;
            const nextResetDate = new Date('2025-08-01T00:00:00'); // Set next reset to August 1, 2025

            const currentCreditsDisplay = document.getElementById('currentCreditsDisplay');
            const creditsResetTime = document.getElementById('creditsResetTime');

            // --- Pricing Plans Data ---
            const pricingPlans = {
                monthly: [
                    { id: 1, name: 'Starter', price: 29, duration: 'per month', features: ['100 AI Credits/month', 'Basic Analytics', 'Standard Support', 'Up to 3 Social Accounts'] },
                    { id: 2, name: 'Pro', price: 79, duration: 'per month', features: ['500 AI Credits/month', 'Advanced Analytics', 'Priority Support', 'Unlimited Social Accounts', 'Team Collaboration (5 users)'], highlight: true },
                    { id: 3, name: 'Growth', price: 199, duration: 'per month', features: ['2000 AI Credits/month', 'All Pro Features', 'Dedicated Onboarding', 'Team Collaboration (20 users)', 'API Access'] }
                ],
                annually: [
                    { id: 1, name: 'Starter', price: 279, duration: 'per year', features: ['1200 AI Credits/year', 'Basic Analytics', 'Standard Support', 'Up to 3 Social Accounts'] },
                    { id: 2, name: 'Pro', price: 759, duration: 'per year', features: ['6000 AI Credits/year', 'Advanced Analytics', 'Priority Support', 'Unlimited Social Accounts', 'Team Collaboration (5 users)'], highlight: true },
                    { id: 3, name: 'Growth', price: 1899, duration: 'per year', features: ['24000 AI Credits/year', 'All Pro Features', 'Dedicated Onboarding', 'Team Collaboration (20 users)', 'API Access'] }
                ]
            };

            let currentPricingPeriod = 'monthly'; // Default view

            // --- Render Pricing Cards ---
            function renderPricingCards(period) {
                const pricingGrid = document.getElementById('pricingGrid');
                pricingGrid.innerHTML = ''; // Clear existing cards

                pricingPlans[period].forEach(plan => {
                    const card = document.createElement('div');
                    card.className = `pricing-card ${plan.highlight ? 'highlight' : ''}`; // Removed 'enterprise' class

                    let priceHtml;
                    if (plan.price === 'Custom') { // This check remains but won't be triggered with new data
                        priceHtml = `<div class="price">${plan.price}</div>`;
                    } else {
                        priceHtml = `<div class="price"><span class="currency">$</span>${plan.price}<span>${plan.duration}</span></div>`;
                    }

                    const featuresHtml = plan.features.map(feature => `<li><i class="fas fa-check-circle"></i> ${feature}</li>`).join('');
                    const buttonText = 'Choose Plan'; // Always "Choose Plan" now

                    card.innerHTML = `
                        <h3>${plan.name}</h3>
                        ${priceHtml}
                        <ul>${featuresHtml}</ul>
                        <button class="btn btn-primary" data-plan-id="${plan.id}" data-period="${period}" data-plan-name="${plan.name}">
                            ${buttonText}
                        </button>
                    `;
                    pricingGrid.appendChild(card);
                });

                // Add event listeners to pricing buttons
                pricingGrid.querySelectorAll('.btn-primary').forEach(button => {
                    button.addEventListener('click', function() {
                        const planName = this.dataset.planName;
                        const planPeriod = this.dataset.period;
                        // Simplified action since no more "Contact Sales"
                        showSuccessMessage(`Choosing ${planName} plan (${planPeriod}) - Redirecting to checkout (mock action)...`);
                        // In a real app, this would redirect to a checkout page or subscription management.
                    });
                });
            }

            // --- Pricing Toggle Logic ---
            const pricingToggleButtons = document.querySelectorAll('.pricing-toggle button');
            pricingToggleButtons.forEach(button => {
                button.addEventListener('click', function() {
                    pricingToggleButtons.forEach(btn => btn.classList.remove('active'));
                    this.classList.add('active');
                    currentPricingPeriod = this.dataset.period;
                    renderPricingCards(currentPricingPeriod);
                });
            });


            // --- Update Credits Display (for top bar) ---
            function updateCreditsDisplay() {
                currentCreditsDisplay.textContent = `${currentCredits}/${maxFreeCredits} Credits`;

                const now = new Date();
                const timeLeft = nextResetDate.getTime() - now.getTime(); // Time in milliseconds

                const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
                const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));

                let resetText = '';
                if (timeLeft < 0) {
                    resetText = 'Credits reset!';
                    // For a real app, you'd handle the actual credit reset here (e.g., via backend API)
                    // For this demo, we'll just display "Credits reset!" indefinitely until a page reload.
                    // If you wanted to *actually* simulate a reset, you'd add:
                    // currentCredits = maxFreeCredits;
                    // nextResetDate.setMonth(nextResetDate.getMonth() + 1); // Set for next month
                    // nextResetDate.setDate(1);
                    // nextResetDate.setHours(0,0,0,0);
                } else if (days > 0) {
                    resetText = `Resets in ${days}d ${hours}h`;
                } else if (hours > 0) {
                    resetText = `Resets in ${hours}h ${minutes}m`;
                } else if (minutes > 0) {
                    resetText = `Resets in ${minutes}m`;
                } else {
                    resetText = `Resets very soon!`;
                }
                creditsResetTime.textContent = resetText;
            }

            // Update display initially and every minute (for countdown)
            updateCreditsDisplay();
            setInterval(updateCreditsDisplay, 60000); // Update every minute

            // --- General Success Message Function ---
            function showSuccessMessage(messageText) {
                const messageDiv = document.querySelector('.success-message');
                messageDiv.textContent = messageText;
                messageDiv.style.display = 'block';

                setTimeout(() => {
                    messageDiv.style.display = 'none';
                }, 3000);
            }

            // Sidebar toggle
            document.querySelector('.menu-toggle').addEventListener('click', function() {
                document.querySelector('.sidebar').classList.toggle('active');
            });

            // Initial render of pricing cards
            renderPricingCards(currentPricingPeriod);
        });
    </script>
</body>
</html>