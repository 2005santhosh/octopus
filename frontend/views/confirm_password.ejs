<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OCTOPUS - Reset Password</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #0969da;
            --primary-hover: #0750a5;
            --danger-color: #dc3545;
            --danger-hover: #c82333;
            --success-color: #28a745;
            --success-bg: #d4edda;
            --success-text: #155724;
            --info-bg: #d1ecf1;
            --info-text: #0c5460;
            --warning-bg: #fff3cd;
            --warning-text: #856404;
            --neutral-bg: #e2e3e5;
            --neutral-text: #383d41;
            --highlight-bg: #e0f0ff;
        }
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        body {
            background-color: #f8f9fa;
            color: #333;
            overflow-x: hidden;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }
        .reset-password-container {
            width: 100%;
            max-width: 450px;
            padding: 20px;
        }
        .reset-password-card {
            background-color: #ffffff;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            padding: 40px 30px;
        }
        .logo-section {
            text-align: center;
            margin-bottom: 30px;
        }
        .logo-section i {
            font-size: 48px;
            color: var(--primary-color);
            margin-bottom: 15px;
        }
        .logo-section h1 {
            font-size: 28px;
            color: var(--primary-color);
            margin-bottom: 10px;
        }
        .logo-section p {
            color: #666;
            font-size: 16px;
        }
        .form-group {
            margin-bottom: 25px;
        }
        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #333;
        }
        .password-input-container {
            position: relative;
        }
        .form-input {
            width: 100%;
            padding: 12px 45px 12px 15px;
            border: 1px solid #ddd;
            border-radius: 8px;
            font-size: 15px;
            transition: border-color 0.3s, box-shadow 0.3s;
        }
        .form-input:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(9, 105, 218, 0.2);
        }
        .password-toggle {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: #666;
            cursor: pointer;
            font-size: 16px;
            transition: color 0.3s;
        }
        .password-toggle:hover {
            color: var(--primary-color);
        }
        .password-strength {
            margin-top: 8px;
            height: 5px;
            background-color: #eee;
            border-radius: 5px;
            overflow: hidden;
        }
        .password-strength-meter {
            height: 100%;
            width: 0;
            border-radius: 5px;
            transition: width 0.3s, background-color 0.3s;
        }
        .password-strength-meter.weak {
            width: 33%;
            background-color: var(--danger-color);
        }
        .password-strength-meter.medium {
            width: 66%;
            background-color: #ffc107;
        }
        .password-strength-meter.strong {
            width: 100%;
            background-color: var(--success-color);
        }
        .password-strength-text {
            font-size: 12px;
            margin-top: 5px;
            color: #666;
        }
        .btn {
            padding: 12px 20px;
            border-radius: 5px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s;
            border: none;
            font-size: 16px;
            width: 100%;
        }
        .btn-primary {
            background-color: var(--primary-color);
            color: white;
        }
        .btn-primary:hover {
            background-color: var(--primary-hover);
        }
        .btn-primary:disabled {
            background-color: #a0c3e6;
            cursor: not-allowed;
        }
        .back-section {
            text-align: center;
            margin-top: 25px;
        }
        .back-link {
            color: var(--primary-color);
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s;
        }
        .back-link:hover {
            color: var(--primary-hover);
            text-decoration: underline;
        }
        .message {
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
            font-size: 14px;
            display: none;
        }
        .message.success {
            background-color: var(--success-bg);
            color: var(--success-text);
            border: 1px solid #c3e6cb;
        }
        .message.error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        .message i {
            margin-right: 8px;
        }
        .form-help-text {
            font-size: 13px;
            color: #666;
            margin-top: 5px;
        }
        .password-requirements {
            margin-top: 10px;
            font-size: 13px;
            color: #666;
        }
        .requirement {
            display: flex;
            align-items: center;
            margin-bottom: 5px;
        }
        .requirement i {
            margin-right: 5px;
            font-size: 12px;
            color: #ccc;
        }
        .requirement.met i {
            color: var(--success-color);
        }
        /* Responsive Design */
        @media (max-width: 768px) {
            .reset-password-container {
                padding: 10px;
            }
            .reset-password-card {
                padding: 30px 20px;
            }
            .logo-section h1 {
                font-size: 24px;
            }
            .logo-section p {
                font-size: 14px;
            }
        }
    </style>
</head>
<body>
    <div class="reset-password-container">
        <div class="reset-password-card">
            <div class="logo-section">
                <i class="fas fa-robot"></i>
                <h1>OCTOPUS</h1>
                <p>Create New Password</p>
            </div>
            
            <div id="successMessage" class="message success">
                <i class="fas fa-check-circle"></i>
                <span>Password reset successful! Redirecting to login...</span>
            </div>
            
            <div id="errorMessage" class="message error">
                <i class="fas fa-exclamation-circle"></i>
                <span>Passwords do not match. Please try again.</span>
            </div>
            
            <form id="resetPasswordForm">
                <div class="form-group">
                    <label class="form-label" for="newPassword">New Password</label>
                    <div class="password-input-container">
                        <input type="password" class="form-input" id="newPassword" placeholder="Enter new password" required>
                        <button type="button" class="password-toggle" id="toggleNewPassword" aria-label="Toggle password visibility">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                    <div class="password-strength">
                        <div class="password-strength-meter" id="passwordStrengthMeter"></div>
                    </div>
                    <div class="password-strength-text" id="passwordStrengthText"></div>
                    
                    <div class="password-requirements">
                        <div class="requirement" id="lengthReq">
                            <i class="fas fa-circle"></i>
                            <span>At least 8 characters</span>
                        </div>
                        <div class="requirement" id="uppercaseReq">
                            <i class="fas fa-circle"></i>
                            <span>At least 1 uppercase letter</span>
                        </div>
                        <div class="requirement" id="numberReq">
                            <i class="fas fa-circle"></i>
                            <span>At least 1 number</span>
                        </div>
                        <div class="requirement" id="specialReq">
                            <i class="fas fa-circle"></i>
                            <span>At least 1 special character</span>
                        </div>
                    </div>
                </div>
                
                <div class="form-group">
                    <label class="form-label" for="confirmPassword">Confirm Password</label>
                    <div class="password-input-container">
                        <input type="password" class="form-input" id="confirmPassword" placeholder="Confirm new password" required>
                        <button type="button" class="password-toggle" id="toggleConfirmPassword" aria-label="Toggle password visibility">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                </div>
                
                <button type="submit" class="btn btn-primary" id="resetBtn">Reset Password</button>
            </form>
            
            <div class="back-section">
                <p><a href="./login" class="back-link">Back to Login</a></p>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const resetPasswordForm = document.getElementById('resetPasswordForm');
            const successMessage = document.getElementById('successMessage');
            const errorMessage = document.getElementById('errorMessage');
            const newPasswordInput = document.getElementById('newPassword');
            const confirmPasswordInput = document.getElementById('confirmPassword');
            const passwordStrengthMeter = document.getElementById('passwordStrengthMeter');
            const passwordStrengthText = document.getElementById('passwordStrengthText');
            const resetBtn = document.getElementById('resetBtn');
            
            // Password toggle buttons
            const toggleNewPassword = document.getElementById('toggleNewPassword');
            const toggleConfirmPassword = document.getElementById('toggleConfirmPassword');
            
            // Password requirements
            const lengthReq = document.getElementById('lengthReq');
            const uppercaseReq = document.getElementById('uppercaseReq');
            const numberReq = document.getElementById('numberReq');
            const specialReq = document.getElementById('specialReq');
            
            // Hide messages initially
            successMessage.style.display = 'none';
            errorMessage.style.display = 'none';
            
            // Toggle password visibility
            toggleNewPassword.addEventListener('click', function() {
                const type = newPasswordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                newPasswordInput.setAttribute('type', type);
                
                // Toggle eye icon
                const icon = this.querySelector('i');
                icon.classList.toggle('fa-eye');
                icon.classList.toggle('fa-eye-slash');
            });
            
            toggleConfirmPassword.addEventListener('click', function() {
                const type = confirmPasswordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                confirmPasswordInput.setAttribute('type', type);
                
                // Toggle eye icon
                const icon = this.querySelector('i');
                icon.classList.toggle('fa-eye');
                icon.classList.toggle('fa-eye-slash');
            });
            
            // Password strength checker
            function checkPasswordStrength(password) {
                let strength = 0;
                
                // Check length
                if (password.length >= 8) {
                    strength += 25;
                    lengthReq.classList.add('met');
                } else {
                    lengthReq.classList.remove('met');
                }
                
                // Check uppercase
                if (/[A-Z]/.test(password)) {
                    strength += 25;
                    uppercaseReq.classList.add('met');
                } else {
                    uppercaseReq.classList.remove('met');
                }
                
                // Check number
                if (/[0-9]/.test(password)) {
                    strength += 25;
                    numberReq.classList.add('met');
                } else {
                    numberReq.classList.remove('met');
                }
                
                // Check special character
                if (/[^A-Za-z0-9]/.test(password)) {
                    strength += 25;
                    specialReq.classList.add('met');
                } else {
                    specialReq.classList.remove('met');
                }
                
                // Update strength meter
                passwordStrengthMeter.className = 'password-strength-meter';
                if (strength <= 25) {
                    passwordStrengthMeter.classList.add('weak');
                    passwordStrengthText.textContent = 'Weak password';
                    passwordStrengthText.style.color = 'var(--danger-color)';
                } else if (strength <= 50) {
                    passwordStrengthMeter.classList.add('weak');
                    passwordStrengthText.textContent = 'Weak password';
                    passwordStrengthText.style.color = 'var(--danger-color)';
                } else if (strength <= 75) {
                    passwordStrengthMeter.classList.add('medium');
                    passwordStrengthText.textContent = 'Medium password';
                    passwordStrengthText.style.color = '#ffc107';
                } else {
                    passwordStrengthMeter.classList.add('strong');
                    passwordStrengthText.textContent = 'Strong password';
                    passwordStrengthText.style.color = 'var(--success-color)';
                }
                
                return strength;
            }
            
            // Listen to password input
            newPasswordInput.addEventListener('input', function() {
                checkPasswordStrength(this.value);
            });
            
            // Form submission
            resetPasswordForm.addEventListener('submit', function(event) {
                event.preventDefault();
                
                const newPassword = newPasswordInput.value;
                const confirmPassword = confirmPasswordInput.value;
                
                // Validate passwords
                if (newPassword !== confirmPassword) {
                    showError('Passwords do not match. Please try again.');
                    return;
                }
                
                // Check password strength
                const strength = checkPasswordStrength(newPassword);
                if (strength < 50) {
                    showError('Password is too weak. Please choose a stronger password.');
                    return;
                }
                
                // Disable button and show loading state
                resetBtn.disabled = true;
                resetBtn.textContent = 'Resetting...';
                
                // Simulate API call
                setTimeout(function() {
                    // Reset button state
                    resetBtn.disabled = false;
                    resetBtn.textContent = 'Reset Password';
                    
                    // Show success message
                    showSuccess();
                    
                    // Redirect to login page after a short delay
                    setTimeout(() => {
                        window.location.href = './login';
                    }, 2000);
                }, 1500); // Simulate 1.5 second delay
            });
            
            function showSuccess() {
                successMessage.style.display = 'block';
                errorMessage.style.display = 'none';
                
                // Scroll to top to show the message
                window.scrollTo({
                    top: 0,
                    behavior: 'smooth'
                });
            }
            
            function showError(message) {
                errorMessage.querySelector('span').textContent = message;
                errorMessage.style.display = 'block';
                successMessage.style.display = 'none';
                
                // Scroll to top to show the message
                window.scrollTo({
                    top: 0,
                    behavior: 'smooth'
                });
            }
        });
    </script>
</body>
</html>